rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // === USERS ===
    match /users/{userId} {
      // Boleh baca data sendiri
      allow read: if request.auth != null && request.auth.uid == userId;

      // Boleh buat data sendiri, bisa set role = "client" atau "driver"
      allow create: if request.auth != null
                    && request.auth.uid == userId
                    && (request.resource.data.role == "client" || request.resource.data.role == "driver");

      // Boleh update data sendiri, tapi tidak boleh mengubah role
      allow update: if request.auth != null
                    && request.auth.uid == userId
                    && !("role" in request.resource.data.keys());

      // Admin boleh full akses
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // === PEMESANAN ===
    match /pemesanan/{docId} {
      // User bisa baca pesanan miliknya, admin bisa baca semua, driver bisa baca pesanan yang ditugaskan
      allow read: if request.auth != null && (
        resource.data.uid == request.auth.uid ||        // user baca pesanannya sendiri
        request.auth.token.admin == true ||            // admin baca semua
        resource.data.driverId == request.auth.uid     // driver baca pesanan yang ditugaskan
      );

      // User hanya bisa create pesanan untuk dirinya sendiri
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;

      // Admin bisa update/delete pesanan apapun
      allow update, delete: if request.auth != null && request.auth.token.admin == true;

      // Driver bisa update status pesanan yang ditugaskan kepadanya
      allow update: if request.auth != null
                    && resource.data.driverId == request.auth.uid
                    && request.resource.data.diff(resource.data).changedKeys()
                          .hasOnly(["status", "updatedAt"]);
    }

    // === MOBIL ===
    match /mobil/{mobilId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        // User hanya boleh update status saat menyewa
        (request.resource.data.status == "disewa" && request.resource.data.tersedia == false) ||
        // Admin punya akses penuh
        (request.auth.token.admin == true)
      );
    }

    // === NOTIFICATIONS ===
    match /notifications/{notifId} {
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || request.auth.token.admin == true);
      allow create: if request.auth != null && (request.resource.data.userId == request.auth.uid || request.resource.data.userId == "admin" || request.auth.token.admin == true);
      allow update: if request.auth != null && (resource.data.userId == request.auth.uid || request.auth.token.admin == true);
    }

    // === VEHICLE VERIFICATIONS ===
    match /vehicleVerifications/{docId} {
      // Driver bisa baca verifikasi miliknya, admin bisa baca semua
      allow read: if request.auth != null && (
        resource.data.driverId == request.auth.uid ||
        request.auth.token.admin == true
      );

      // Driver bisa create verifikasi untuk dirinya sendiri
      allow create: if request.auth != null
                    && request.resource.data.driverId == request.auth.uid;

      // Driver bisa update verifikasi miliknya, admin bisa update semua
      allow update: if request.auth != null && (
        resource.data.driverId == request.auth.uid ||
        request.auth.token.admin == true
      );

      // Admin bisa delete semua
      allow delete: if request.auth != null && request.auth.token.admin == true;
    }

    // === PAYMENT VERIFICATIONS ===
    match /paymentVerifications/{docId} {
      // Driver bisa baca verifikasi pembayaran miliknya, admin bisa baca semua
      allow read: if request.auth != null && (
        resource.data.driverId == request.auth.uid ||
        request.auth.token.admin == true
      );

      // Driver bisa create verifikasi pembayaran untuk dirinya sendiri
      allow create: if request.auth != null
                    && request.resource.data.driverId == request.auth.uid;

      // Driver bisa update verifikasi pembayaran miliknya, admin bisa update semua
      allow update: if request.auth != null && (
        resource.data.driverId == request.auth.uid ||
        request.auth.token.admin == true
      );

      // Admin bisa delete semua
      allow delete: if request.auth != null && request.auth.token.admin == true;
    }

  }
}
